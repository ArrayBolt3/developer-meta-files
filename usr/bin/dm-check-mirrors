#!/bin/bash

#set -x
set -e

curl_built_in_args="\
      --location \
      --show-error \
      --retry-connrefused \
      --retry 3 \
      --retry-delay 3 \
      --retry-max-time 120 \
      --max-time 180 \
      --no-buffer"

mirror_list="
   https://download.whonix.org/ova/
   https://mirrors.dotsrc.org/whonix/ova
   https://mirror.koljasagorski.de/whonix/ova
   https://ftp.icm.edu.pl/pub/Linux/dist/whonix/ova
"

## has no TLS v1.3:
## https://quantum-mirror.hu/mirrors/pub/whonix/ova
## https://mirrors.gigenet.com/whonix/ova

## TODO: remove
# mirror_list="
#    https://download.whonix.org/ova/
# "

adduser --quiet --system --group checkmirrors || true

as_user="sudo --non-interactive -u checkmirrors"

$as_user touch /home/checkmirrors/version.txt

$as_user scurl $curl_built_in_args --url "https://www.whonix.org/w/index.php?title=Template:VersionNew&stable=0&action=raw" --output /home/checkmirrors/version.txt --silent

$as_user str_replace "<noinclude>[[Category:MultiWiki]]</noinclude>" "" /home/checkmirrors/version.txt >/dev/null

version=$(stcat /home/checkmirrors/version.txt)

#stecho "version: '$version'"

for mirror_item in $mirror_list ; do
   ## for prettier xtrace only
   mirror_item="$mirror_item"

   link="${mirror_item}/${version}/Whonix-LXQt-${version}.ova"
   stecho "link: $link"

   curl_exit_code=0

   ## TODO: --max-time

   ## 2> /home/checkmirrors/stderr.txt \

   scurl \
      $curl_built_in_args \
      --write-out "%{speed_download}" \
      --url "$link" \
      --retry 0 \
      --max-time 30 \
      --output /dev/null \
      1> /home/checkmirrors/stdout.txt \
      || { curl_exit_code=$? ; true; };

   stdout=$(stcat /home/checkmirrors/stdout.txt)
   #stderr=$(stcat /home/checkmirrors/stderr.txt)

   stecho "stdout: '$stdout'"
   stecho "stderr: '$stderr'"

   ## Curl return bytes per second as per curl default.
   bytes_per_second="$stdout"
   kb_per_second="$(( $bytes_per_second / 1024 ))"

   mb_per_second="$(( $bytes_per_second / 1024 / 1024 ))"

   stecho "kb_per_second: '$kb_per_second'"
   stecho "mb_per_second: '$mb_per_second'"
done

stecho ""
true ""
