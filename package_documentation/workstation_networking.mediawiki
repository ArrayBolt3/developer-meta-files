== anon-apps-config ==

* https://github.com/Whonix/anon-apps-config
* [https://github.com/Whonix/anon-apps-config/blob/master/debian/control debian/control]
===  anonymity, privacy and security settings pre-configuration ===

Most settings take effect for newly created user account onlys, and not
for existing user accounts.

Enables Menubar in Dolphin by default.

Deactivates KGpg's first run wizard. Uses hkp://qdigse2yzvuglcix.onion as
default keyserver. Disables tip of the day. Disables KGpg's systray.

Double click instead of single click in KDE.

Deactivates maximize windows when moved to the top.
In context of anonymity it might be better not to maximize the browser window
(https://trac.torproject.org/projects/tor/ticket/7255).
To prevent users from accidentally maximizing their browser window, it is
better when KDE's feature to maximize windows when moved to the top is
disabled.

Deactivates KDE's system sounds.

Disables KDE graphics effects. Disables some background processes.

Stream Isolation (proxy) settings for KDE apps for Anonymity Distributions
Configures global proxy settings, which acts as a fallback if no other proxy
settings are set, for KDE applications to socks 10.152.152.10:9122.
Otherwise unconfigured KDE applications would use no proxy settings
(Transparent Proxying) if the anonymity distribution features a transparent
proxy.
Useful to improve stream isolation.
On the other hand, anonymity distributions not featuring transparent proxying
should probably not install this package by default, because then unconfigured
KDE applications should by default not be able to connect.

Sets Unlimited Scrollback in Konsole.

Disables klipper clipboard history.

Deactivates automatic updates for Package Manager APT and Apper
Useful in context of networks with limited traffic quota, slow networks and
anonymity distributions.
In latter case, the default automatic updates interval would be too
predictable (expectable amount of traffic every X), thus eventually be
vulnerable for traffic fingerprinting.
Disabling Apper automatic updates only takes effect for newly created user
accounts. Not for existing user accounts. This is most useful to help Linux
distribution maintainers setting divergent defaults.

Longer Timeouts for Package Manager APT
Raising timeout and retries using configuration snippet. Useful in context of
slow networks and anonymity distributions.

Ships a configuration file /etc/apt/apt.conf.d/90longer-timeouts to configure
apt-get.

Ships a configuration file /etc/skel/.config/vlc/vlcrc to configure VLC to not
ask for network policy at start and sets vout=xcb_x11 to enable VM
compatibility out-of-the-box.

Disabled gajim update manager by default for better security since it does not
verify software signatures by hiding file
/usr/share/gajim/plugins/plugin_installer/__init__.py using
'config-package-dev' 'hide'.

Disables systemd-resolved during boot unless file /etc/dns-enable exists.

Disables systemd-resolved fallback DNS (which by default is set to Google).

Due to technical limitations some settings only take effect for applications
being started for the very first time, i.e. when the user config of that
application in the user's home folder does not exist yet. Works best for new
user accounts.

This package is most useful to help Linux distribution maintainers setting
divergent defaults.
=== /etc/apt/apt.conf.d/90longer-timeouts ===

* [https://github.com/Whonix/anon-apps-config/blob/master/etc/apt/apt.conf.d/90longer-timeouts /etc/apt/apt.conf.d/90longer-timeouts]
* <code>~/Whonix/packages/anon-apps-config/etc/apt/apt.conf.d/90longer-timeouts</code>

longer APT timeouts and more retires
=== /lib/systemd/system/systemd-resolved.service.d/40_anon-apps-config.conf ===

* [https://github.com/Whonix/anon-apps-config/blob/master/lib/systemd/system/systemd-resolved.service.d/40_anon-apps-config.conf /lib/systemd/system/systemd-resolved.service.d/40_anon-apps-config.conf]
* <code>~/Whonix/packages/anon-apps-config/lib/systemd/system/systemd-resolved.service.d/40_anon-apps-config.conf</code>

Disable <code>systemd-resolved</code> unless file
<code>/etc/dns-enable</code> exists.
=== /usr/lib/systemd/resolved.conf.d/40_anon-apps-config.conf ===

* [https://github.com/Whonix/anon-apps-config/blob/master/usr/lib/systemd/resolved.conf.d/40_anon-apps-config.conf /usr/lib/systemd/resolved.conf.d/40_anon-apps-config.conf]
* <code>~/Whonix/packages/anon-apps-config/usr/lib/systemd/resolved.conf.d/40_anon-apps-config.conf</code>


do not default to using Google nameservers
https://phabricator.whonix.org/T793
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=761658
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=761658#216
https://www.freedesktop.org/software/systemd/man/systemd-resolved.service.html
https://forums.whonix.org/t/os-generated-network-traffic
* <code>[Resolve]</code>
* <code>FallbackDNS=</code>

=== /usr/share/anon-apps-config/kioslaverc ===

* [https://github.com/Whonix/anon-apps-config/blob/master/usr/share/anon-apps-config/kioslaverc /usr/share/anon-apps-config/kioslaverc]
* <code>~/Whonix/packages/anon-apps-config/usr/share/anon-apps-config/kioslaverc</code>

KDE stream isolation settings.

* <code>[Proxy Settings]</code>
* <code>NoProxyFor=127.0.0.1</code>
* <code>ProxyType=1</code>
* <code>ReversedException=false</code>
* <code>socksProxy=http://10.152.152.10 9122</code>

=== /usr/share/anon-apps-config/ksmserverrc ===

* [https://github.com/Whonix/anon-apps-config/blob/master/usr/share/anon-apps-config/ksmserverrc /usr/share/anon-apps-config/ksmserverrc]
* <code>~/Whonix/packages/anon-apps-config/usr/share/anon-apps-config/ksmserverrc</code>

disable session saving
https://forums.whonix.org/t/kdesudo-error-popup-window-sdwdate-gui
* <code>loginMode=default</code>
== anon-ws-disable-stacked-tor ==

* https://github.com/Whonix/anon-ws-disable-stacked-tor
* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/debian/control debian/control]
===  Prevents Tor over Tor in Anonymity Distribution Workstations ===

Supposed to be installed on Workstations, which prevents installing the real
Tor package from upstream (ex: Debian, The Tor Project) APT repositories. Its
purpose is to prevent, running Tor over Tor.

It allows installation of packages, which depend on Tor, such as TorChat,
parcimonie and torbrowser-launcher.

This package uses the "Provides: tor" field[1], which should avoid any kinds of
conflicts, in case upstream releases a higher version of Tor. This won't work
for packages, which depend on an explicit version of Tor (such as TorChat).
This is non-ideal, since for example the torchat package will install Tor, but
still acceptable, because of the following additional implementations.

Binaries eventually installed (by the tor Debian package) /usr/bin/tor as well
as /usr/sbin/tor are replaced with a dummy wrapper that does nothing
(dpkg-diverted using config-package-dev).

systemd-socket-proxyd listens on Tor's default ports. system Tor's
127.0.0.1:9050, 127.0.0.1:9051 and TBB's 127.0.0.1:9150, 127.0.0.1:9051,
which prevents the
default Tor Browser Bundle or Tor package by The Tor Project from opening
these default ports, which will result in Tor failing to open its listening
port and therefore exiting, thus preventing Tor over Tor.

See also:

* https://www.whonix.org/wiki/Dev/anon-ws-disable-stacked-tor
* https://tor.stackexchange.com/questions/427/is-running-tor-over-tor-dangerous

[1] See "7.5 Virtual packages - Provides" on
http://www.debian.org/doc/debian-policy/ch-relationships.html

This package is produced independently of, and carries no guarantee from,
The Tor Project.
=== /debian/anon-ws-disable-stacked-tor.displace ===

* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/debian/anon-ws-disable-stacked-tor.displace /debian/anon-ws-disable-stacked-tor.displace]
* <code>~/Whonix/packages/anon-ws-disable-stacked-tor/debian/anon-ws-disable-stacked-tor.displace</code>
* workstation only<!--workstation-only-->

<code>config-package-dev</code> <code>displace</code> the following files:

* <code>/etc/default/tor.anondist</code>
* <code>/usr/bin/tor.anondist</code>
* <code>/usr/sbin/tor.anondist</code>

=== /debian/anon-ws-disable-stacked-tor.postinst ===

* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/debian/anon-ws-disable-stacked-tor.postinst /debian/anon-ws-disable-stacked-tor.postinst]
* <code>~/Whonix/packages/anon-ws-disable-stacked-tor/debian/anon-ws-disable-stacked-tor.postinst</code>
* workstation only<!--workstation-only-->

<code>/etc/X11/Xsession.d/</code> hook to <code>source</code>
<code>/usr/lib/anon-ws-disable-stacked-tor/torbrowser.sh</code>

Add user "user" to the group "debian-tor", so user "user" can access Tor's control port.
User "user" already exists thanks to the anon-base-files package.
* <code>addgroup --quiet user debian-tor</code>

=== /etc/anon-ws-disable-stacked-tor.d/30_anon-dist.conf ===

* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/etc/anon-ws-disable-stacked-tor.d/30_anon-dist.conf /etc/anon-ws-disable-stacked-tor.d/30_anon-dist.conf]
* <code>~/Whonix/packages/anon-ws-disable-stacked-tor/etc/anon-ws-disable-stacked-tor.d/30_anon-dist.conf</code>
* workstation only<!--workstation-only-->

<code>systemd-unit-files-generator</code> and <code>socat-unix-sockets</code> configuration examples.
=== /etc/profile.d/20_torbrowser.sh ===

* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/etc/profile.d/20_torbrowser.sh /etc/profile.d/20_torbrowser.sh]
* <code>~/Whonix/packages/anon-ws-disable-stacked-tor/etc/profile.d/20_torbrowser.sh</code>
* workstation only<!--workstation-only-->

<code>/etc/profile.d</code> hook to <code>source</code>
<code>/usr/lib/anon-ws-disable-stacked-tor/torbrowser.sh</code>
=== /etc/rsyslog.d/anon-ws-disable-stacked-tor.conf ===

* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/etc/rsyslog.d/anon-ws-disable-stacked-tor.conf /etc/rsyslog.d/anon-ws-disable-stacked-tor.conf]
* <code>~/Whonix/packages/anon-ws-disable-stacked-tor/etc/rsyslog.d/anon-ws-disable-stacked-tor.conf</code>
* workstation only<!--workstation-only-->

rsyslog configuration drop-in snippet

No longer required since no longer using rinetd.

Workaround for:
'rinetd fills up the logs until disk is full up if it cannot bind'
http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=796235
* <code>:msg, contains, "accept(0): Socket operation on non-socket" stop</code>

=== /etc/X11/Xsession.d/20torbrowser ===

* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/etc/X11/Xsession.d/20torbrowser /etc/X11/Xsession.d/20torbrowser]
* <code>~/Whonix/packages/anon-ws-disable-stacked-tor/etc/X11/Xsession.d/20torbrowser</code>
* workstation only<!--workstation-only-->

<code>/etc/X11/Xsession.d/</code> hook to <code>source</code>
<code>/usr/lib/anon-ws-disable-stacked-tor/torbrowser.sh</code>
=== /lib/systemd/system/anon-ws-disable-stacked-tor.service ===

* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/lib/systemd/system/anon-ws-disable-stacked-tor.service /lib/systemd/system/anon-ws-disable-stacked-tor.service]
* <code>~/Whonix/packages/anon-ws-disable-stacked-tor/lib/systemd/system/anon-ws-disable-stacked-tor.service</code>
* workstation only<!--workstation-only-->

Runs <code>/usr/lib/anon-ws-disable-stacked-tor/state-files</code> and
<code>/usr/lib/anon-ws-disable-stacked-tor/socat-unix-sockets</code>.
=== /lib/systemd/system/tor@default.service.d/50_anon_ws_disable_stacked_tor.conf ===

* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/lib/systemd/system/tor@default.service.d/50_anon_ws_disable_stacked_tor.conf /lib/systemd/system/tor@default.service.d/50_anon_ws_disable_stacked_tor.conf]
* <code>~/Whonix/packages/anon-ws-disable-stacked-tor/lib/systemd/system/tor@default.service.d/50_anon_ws_disable_stacked_tor.conf</code>
* workstation only<!--workstation-only-->

Qubes-Whonix:

Clear 'ConditionPathExists=/run/qubes-service/whonix-gateway' set by
the qubes-whonix package, which is useful on the gateway but not on the
workstation.

In effect the dummy Tor service will run on Whonix-Workstation.

* <code>ConditionPathExists=</code>

=== /lib/systemd/system/tor@default.service.d/51_anon_ws_disable_stacked_tor.conf ===

* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/lib/systemd/system/tor@default.service.d/51_anon_ws_disable_stacked_tor.conf /lib/systemd/system/tor@default.service.d/51_anon_ws_disable_stacked_tor.conf]
* <code>~/Whonix/packages/anon-ws-disable-stacked-tor/lib/systemd/system/tor@default.service.d/51_anon_ws_disable_stacked_tor.conf</code>
* workstation only<!--workstation-only-->

Compatibility with system Tor package.

Overrides systemd unit file by system Tor package for compatibility so
the dummy Tor binary <code>/usr/bin/tor</code> gets load instead.

Makes all <code>systemctl</code> <code>restart</code> <code>reload</code>
<code>status</code> commands compatible with dummy Tor.
=== /lib/systemd/system/tor.service.d/50_anon_ws_disable_stacked_tor.conf ===

* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/lib/systemd/system/tor.service.d/50_anon_ws_disable_stacked_tor.conf /lib/systemd/system/tor.service.d/50_anon_ws_disable_stacked_tor.conf]
* <code>~/Whonix/packages/anon-ws-disable-stacked-tor/lib/systemd/system/tor.service.d/50_anon_ws_disable_stacked_tor.conf</code>
* workstation only<!--workstation-only-->

Make 'sudo service tor status' exit '0' for better compatibility.
* <code>RemainAfterExit=yes</code>
=== /usr/bin/tor.anondist ===

* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/usr/bin/tor.anondist /usr/bin/tor.anondist]
* <code>~/Whonix/packages/anon-ws-disable-stacked-tor/usr/bin/tor.anondist</code>
* workstation only<!--workstation-only-->

dummy Tor wrapper doing nothing but wait forever and

OnionShare support for configuration option "bundled Tor".
=== /usr/lib/anon-ws-disable-stacked-tor/socat-unix-sockets ===

* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/usr/lib/anon-ws-disable-stacked-tor/socat-unix-sockets /usr/lib/anon-ws-disable-stacked-tor/socat-unix-sockets]
* <code>~/Whonix/packages/anon-ws-disable-stacked-tor/usr/lib/anon-ws-disable-stacked-tor/socat-unix-sockets</code>
* workstation only<!--workstation-only-->

<code>socat-unix-sockets</code> starter.
=== /usr/lib/anon-ws-disable-stacked-tor/state-files ===

* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/usr/lib/anon-ws-disable-stacked-tor/state-files /usr/lib/anon-ws-disable-stacked-tor/state-files]
* <code>~/Whonix/packages/anon-ws-disable-stacked-tor/usr/lib/anon-ws-disable-stacked-tor/state-files</code>
* workstation only<!--workstation-only-->

Emulates Tor by copying and chmodding the correct state files such as
<code>/run/tor/control.authcookie</code>.
=== /usr/lib/anon-ws-disable-stacked-tor/systemd-unit-files-generator ===

* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/usr/lib/anon-ws-disable-stacked-tor/systemd-unit-files-generator /usr/lib/anon-ws-disable-stacked-tor/systemd-unit-files-generator]
* <code>~/Whonix/packages/anon-ws-disable-stacked-tor/usr/lib/anon-ws-disable-stacked-tor/systemd-unit-files-generator</code>
* workstation only<!--workstation-only-->

Generates systemd unit files in
<code>/lib/systemd/system/anon-ws-disable-stacked-tor_autogen_*</code> which
listen on common local ports used by popular Tor applications such as Tor
Browser.

Redirect Whonix-Workstation port <code>9050</code> to Whonix-Gateway port
<code>9050</code> and so forth.

Create a unix domain socket files such as
/run/anon-ws-disable-stacked-tor/127.0.0.1_9050.sock and forward those
to $GATEWAY_IP:9150 etc. See also:
https://phabricator.whonix.org/T192

system Tor default SocksSocket is /run/tor/socks
redirect Whonix-Workstation unix domain socket file /run/tor/socks to Whonix-Gateway port 9050

Debian /usr/share/tor/tor-service-defaults-torrc uses '/run/tor/control' Tor ControlSocket
Redirect Whonix-Workstation unix domain socket file /run/tor/control to Whonix-Gateway port 9051
=== /usr/lib/anon-ws-disable-stacked-tor/torbrowser.sh ===

* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/usr/lib/anon-ws-disable-stacked-tor/torbrowser.sh /usr/lib/anon-ws-disable-stacked-tor/torbrowser.sh]
* <code>~/Whonix/packages/anon-ws-disable-stacked-tor/usr/lib/anon-ws-disable-stacked-tor/torbrowser.sh</code>
* workstation only<!--workstation-only-->

Environment variables for Tor Browser integration.

Prevents Tor over Tor.

Deactivate tor-launcher,
a Vidalia replacement as browser extension,
to prevent running Tor over Tor.
https://trac.torproject.org/projects/tor/ticket/6009
https://gitweb.torproject.org/tor-launcher.git
* <code>export TOR_SKIP_LAUNCH=1</code>

The following TOR_SOCKS_HOST and TOR_SOCKS_PORT variables
do not work flawlessly, due to an upstream bug in Tor Button:
   "TOR_SOCKS_HOST, TOR_SOCKS_PORT regression"
   https://trac.torproject.org/projects/tor/ticket/8336
(As an alternative,
   /home/user/tor-browser/Browser/TorBrowser/Data/Browser/profile.default/user.js
could be used.)
Fortunately, this is not required for Whonix by default anymore,
because systemd-socket-proxyd is configured to redirect
Whonix-Workstation ports
127.0.0.1:9050 to Whonix-Gateway 10.152.152.10:9050
127.0.0.1:9051 to Whonix-Gateway 10.152.152.10:9051
127.0.0.1:9150 to Whonix-Gateway 10.152.152.10:9150
127.0.0.1:9151 to Whonix-Gateway 10.152.152.10:9151
<code>#export TOR_SOCKS_HOST="10.152.152.10"</code><br />
<code>#export TOR_SOCKS_PORT="9150"</code><br />
<code>#export TOR_CONTROL_HOST="127.0.0.1"</code><br />
<code>#export TOR_CONTROL_PORT="9151"</code><br />
this is to satisfy Tor Button just filled up with anything
<code>#export TOR_CONTROL_PASSWD='"password"'</code><br />

We are not using TOR_TRANSPROXY=1 because that would break Tor Browser's
per tab stream isolation. (Tor Browser talks to a Tor SocksPort and sets a
socks user name and Tor is using IsolateSOCKSAuth by Tor default.)
<code>#export TOR_TRANSPROXY=1</code><br />

Environment variable to configure Tor Browser to use a pre existing unix
domain socket file instead of creating its own one to avoid Tor over Tor and
to keep it being able to connect.
systemd-socket-proxyd is being used for creation of unix domain socket file
/run/anon-ws-disable-stacked-tor/127.0.0.1_9150.sock and forwarding it to
to Whonix-Gateway port 9150.
https://phabricator.whonix.org/T192
https://trac.torproject.org/projects/tor/ticket/20111#comment:5
* <code>export TOR_SOCKS_IPC_PATH="/run/anon-ws-disable-stacked-tor/127.0.0.1_9150.sock"</code>
* <code>export TOR_CONTROL_IPC_PATH="/run/anon-ws-disable-stacked-tor/127.0.0.1_9151.sock"</code>

environment variable to skip TorButton control port verification
https://trac.torproject.org/projects/tor/ticket/13079
* <code>export TOR_SKIP_CONTROLPORTTEST=1</code>

Environment variable to disable the "TorButton" ->
"Open Network Settings..." menu item. It is not useful and confusing to have
on a workstation, because Tor must be configured on the Whonix-Gateway, which is
for security reasons forbidden from the Whonix-Gateway.
https://trac.torproject.org/projects/tor/ticket/14100
* <code>export TOR_NO_DISPLAY_NETWORK_SETTINGS=1</code>

=== /usr/lib/tmpfiles.d/anon-ws-disable-stacked-tor.conf ===

* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/usr/lib/tmpfiles.d/anon-ws-disable-stacked-tor.conf /usr/lib/tmpfiles.d/anon-ws-disable-stacked-tor.conf]
* <code>~/Whonix/packages/anon-ws-disable-stacked-tor/usr/lib/tmpfiles.d/anon-ws-disable-stacked-tor.conf</code>
* workstation only<!--workstation-only-->

Create folder <code>/run/anon-ws-disable-stacked-tor</code>.

* <code>d /run/anon-ws-disable-stacked-tor 0775 root root</code>

=== /usr/sbin/tor.anondist ===

* [https://github.com/Whonix/anon-ws-disable-stacked-tor/blob/master/usr/sbin/tor.anondist /usr/sbin/tor.anondist]
* <code>~/Whonix/packages/anon-ws-disable-stacked-tor/usr/sbin/tor.anondist</code>
* workstation only<!--workstation-only-->

dummy Tor wrapper doing nothing but wait forever.
== anon-ws-dns-conf ==

* https://github.com/Whonix/anon-ws-dns-conf
* [https://github.com/Whonix/anon-ws-dns-conf/blob/master/debian/control debian/control]
===  DNS configuration Anonymity Linux Distribution Workstations ===

Whether a Anonymity Linux Distribution Gateway supports anonymized system DNS
for Workstation's traffic (also known as Transparent DNS Proxy) mainly depends
on the Gateway's firewall.

This package is simply installing /etc/resolv.conf which points to
10.152.152.10, where an Anon-Gateway is supposed to provide a DnsPort on port
53.

When you do not wish to use the Transparent DNS features, this package can be
removed.
=== /etc/resolv.conf.anondist ===

* [https://github.com/Whonix/anon-ws-dns-conf/blob/master/etc/resolv.conf.anondist /etc/resolv.conf.anondist]
* <code>~/Whonix/packages/anon-ws-dns-conf/etc/resolv.conf.anondist</code>

set <code>nameserver 10.152.152.10</code>
This works different in Qubes-Whonix.
== bindp ==

* https://github.com/Whonix/bindp
* [https://github.com/Whonix/bindp/blob/master/debian/control debian/control]
===  Binding specific IP and Port for Linux Running Application ===

This package is probably most useful for Anonymity Distributions.

This package is produced independently of, and carries no guarantee from,
The Tor Project.
=== /debian/bindp.postinst ===

* [https://github.com/Whonix/bindp/blob/master/debian/bindp.postinst /debian/bindp.postinst]
* <code>~/Whonix/packages/bindp/debian/bindp.postinst</code>
* workstation only<!--workstation-only-->

Compiles <code>/usr/lib/bindp.c</code> to <code>/usr/lib/libindp.so</code>
during package installation using <code>gcc</code>.
== whonix-ws-network-conf ==

* https://github.com/Whonix/whonix-ws-network-conf
* [https://github.com/Whonix/whonix-ws-network-conf/blob/master/debian/control debian/control]
===  Network Configuration for Whonix-Workstation ===

Includes /etc/network/interfaces for Whonix-Workstation.

Sets up an internal network interface eth0.

Currently relevant for Non-Qubes-Whonix only.
=== /debian/whonix-ws-network-conf.links ===

* [https://github.com/Whonix/whonix-ws-network-conf/blob/master/debian/whonix-ws-network-conf.links /debian/whonix-ws-network-conf.links]
* <code>~/Whonix/packages/whonix-ws-network-conf/debian/whonix-ws-network-conf.links</code>
* workstation only<!--workstation-only-->
* Non-Qubes-Whonix only


Disable Predictable Network Interface Names as these are problematic.
https://forums.whonix.org/t/whonix-14-0-0-0-7-developers-only/3449/4
Disabling them as per
'zless /usr/share/doc/udev/README.Debian.gz'.
* <code>/dev/null /etc/systemd/network/99-default.link</code>

=== /debian/whonix-ws-network-conf.triggers ===

* [https://github.com/Whonix/whonix-ws-network-conf/blob/master/debian/whonix-ws-network-conf.triggers /debian/whonix-ws-network-conf.triggers]
* <code>~/Whonix/packages/whonix-ws-network-conf/debian/whonix-ws-network-conf.triggers</code>
* workstation only<!--workstation-only-->
* Non-Qubes-Whonix only


Required for /etc/systemd/network/99-default.link to take effect as per
'zless /usr/share/doc/udev/README.Debian.gz'.
* <code>activate-noawait update-initramfs</code>

=== /etc/network/interfaces.d/30_non-qubes-whonix ===

* [https://github.com/Whonix/whonix-ws-network-conf/blob/master/etc/network/interfaces.d/30_non-qubes-whonix /etc/network/interfaces.d/30_non-qubes-whonix]
* <code>~/Whonix/packages/whonix-ws-network-conf/etc/network/interfaces.d/30_non-qubes-whonix</code>
* workstation only<!--workstation-only-->
* Non-Qubes-Whonix only

network interfaces configuration eth0 to communicate with Whonix-Gateway

static network configuration

<code>#address 10.152.152.11</code><br />
<code>#netmask 255.255.192.0</code><br />
<code>#gateway 10.152.152.10</code><br />
