#!/bin/bash

## Copyright (C) 2012 - 2022 ENCRYPTED SUPPORT LP <adrelanos@whonix.org>
## See the file COPYING for copying conditions.

set -x
set -e

true "INFO: Currently running script: $BASH_SOURCE $@"

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

## disable cmd line parser, since not needed
export dist_build_one_parsed="1"
export VMNAME="internalrun"

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$MYDIR"

source ../../../../help-steps/pre
source ../../../../help-steps/colors
source ../../../../help-steps/variables

show_files() {
   for file_name in "$dist_binary_build_folder"/* ; do
      if [ "$file_name" == "" ]; then
         continue
      fi

      base_name="${file_name##*/}"
      ## example base_name:
      ## Whonix-XFCE-15.0.1.3.4.libvirt.xz
      file_extension="${base_name##*.}"
      ## example file_extension:
      ## xz

      ## White list file extensions.
      if [ "$file_extension" = "iso" ]; then
         true
         iso=true
      elif [ "$file_extension" = "ova" ]; then
         true
      ## XXX: non-ideal, would upload all files named *.xz in $dist_binary_build_folder
      ##      folder but there should be no other files named like this except
      ##      libvirt.xz files and therefore good enough for now.
      elif [ "$file_extension" = "xz" ]; then
         true
      elif [ "$file_extension" = "asc" ]; then
         true
      elif [ "$file_extension" = "sig" ]; then
         true
      elif [ "$file_extension" = "sha256sums" ]; then
         true
      elif [ "$file_extension" = "sha512sums" ]; then
         true
      elif [ "$file_extension" = "torrent" ]; then
         true
      else
         ## Skip any non-white listed file extensions.
         true "INFO: Not adding file_name $file_name to upload file list, ok."
         continue
      fi

      if [ "$file_list" = "" ]; then
         file_list="$file_name"
      else
         file_list="\
   $file_list
   $file_name"
      fi
   done
}

upload_files() {
   ## TODO
   #dist_server_with_upload_location="hulahoop@whonix.org:/var/rsync/libvirt"
   #dist_server_with_upload_location="hulahoop,whonix-kvm@frs.sourceforge.net:/home/frs/project/whonix-kvm/libvirt"

   if [ "$destination_site" = "" ]; then
      error "Variable destination_site is empty."
   fi

   if [ "$dist_server_with_upload_location" = "" ]; then
      if [ "$iso" = "true" ]; then
         dist_server_with_upload_location="root@${destination_site}:/var/rsync/iso"
      else
         dist_server_with_upload_location="root@${destination_site}:/var/rsync/ova"
         #dist_server_with_upload_location="adrelanos,whonix@frs.sourceforge.net:/home/frs/project/whonix/ova"
      fi
   fi

   if [ "$dist_server_with_upload_location" = "" ]; then
      error "Variable dist_server_with_upload_location is empty."
   fi

   ####

   dist_server_with_upload_location_with_version="${dist_server_with_upload_location}/${dist_build_version}/"

   true "file_list:
   $file_list"

   true "dist_server_with_upload_location_with_version: $dist_server_with_upload_location_with_version"

   if [ ! "$build_upload_noninteractive" = "true" ]; then
      true "${cyan}INFO: Press any enter to continue.${reset}"
      read temp
   fi

   ## Test.
   rsync \
      --dry-run \
      $rsync_opts \
      $file_list \
      "$dist_server_with_upload_location_with_version"

   if [ ! "$build_upload_noninteractive" = "true" ]; then
      true "${cyan}INFO: Press any enter to continue.${reset}"
      read temp
   fi

   attempts_counter="0"
   attempts_max="10"

   while true; do
      attempts_counter="$(( $attempts_counter + 1 ))"

      rsync_exit_code="0"
      rsync \
         $rsync_opts \
         $file_list \
         "$dist_server_with_upload_location_with_version" \
         || { rsync_exit_code="$?" ; true; };

      if [ "$rsync_exit_code" = "0" ]; then
         break
      fi

      if [ "$attempts_counter" -ge "$attempts_max" ]; then
         msg="${bold}${red}INFO: Upload failed.${reset}"
         true "$msg"
         error "$msg"
         break
      fi

      sleep 10

   done
}

main() {
   show_files "$@"

   if [ "$dist_build_version" = "" ]; then
      error "Variable dist_build_version is empty."
   fi

   destination_site="whonix.org"
   upload_files "$@"

   destination_site="kicksecure.com"
   upload_files "$@"

   true
}

main "$@"
