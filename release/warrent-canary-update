#!/bin/bash

## Copyright (C) 2012 - 2020 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

set -x
set -e

true "INFO: Currently running script: $BASH_SOURCE $@"

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$MYDIR"

## disable cmd line parser, since not needed
export whonix_build_one_parsed="1"
export VMNAME="internalrun"

source ../../../help-steps/pre
source ../../../help-steps/colors
source ../../../help-steps/variables

if [ "$(id -u)" = "0" ]; then
   true "ERROR: Do not run this as root!"
   exit 1
fi

sanity_tests() {
   command -v signify-openbsd >/dev/null
   test -f "$signify_public_key"
   test -f "$signify_private_key"

   command -v rsstail

   "$WHONIX_SOURCE_HELP_STEPS_FOLDER/gpg_test_sign"
}

sign_cmd() {
   test -f "$full_path_to_canary_txt"

   ## GPG signatures do not authenticate filenames by default, therefore add
   ## the name of the file as a OpenPGP notation so at least users that look
   ## at OpenPGP notations have a chance to detect if file names have been
   ## tampered with.
   $gpg_bin "$@" --armor --yes --set-notation "file@name"="$(basename "$full_path_to_canary_txt")" --output "$full_path_to_gpg_output_file" "$full_path_to_canary_txt"
}

sign_cmd_signify() {
   ## To create a key for signify-openbsd:
   ## as user "user"
   ## mkdir -p ~/.signify
   ## cd ~/.signify
   ## signify-openbsd -n -G -p keyname.pub -s keyname.sec -c "Firstname Lastname e-mail@address.org signify"

   ## https://forums.whonix.org/t/signify-openbsd/7842
   signify-openbsd -S -s "$signify_private_key" -m "$1" -x "${1}${2}" ${3}
   ## Sanity test.
   test -f "${1}${2}"
}

verify_cmd() {
   $gpg_bin --verify-options show-notations --verify "$@"
}

verify_cmd_signinfy() {
   signify-openbsd -V -p "$signify_public_key" -m "$1" -x "${1}${2}" ${3}
}

sanity_tests

mkdir --parents "$WHONIX_BINARY/canary"

full_path_to_canary_txt="$WHONIX_BINARY/canary/canary.txt"

cp "$whonix_dev_meta_files_folder/misc/canary-template.txt" "$full_path_to_canary_txt"

proof_of_freshness_output="$("$whonix_dev_meta_files_folder/release/proof_of_freshness_generator.sh" 2>&1)"
echo "$proof_of_freshness_output" | tee -a "$full_path_to_canary_txt"

cat "$full_path_to_canary_txt"

full_path_to_gpg_output_file="$WHONIX_BINARY/canary/canary.txt.asc"
sign_cmd --detach-sign
verify_cmd "$full_path_to_gpg_output_file" "$full_path_to_canary_txt"

full_path_to_gpg_output_file="$WHONIX_BINARY/canary/canary.txt.clearsign.asc"
sign_cmd --clearsign
verify_cmd "$WHONIX_BINARY/canary/canary.txt.clearsign.asc"

sign_cmd_signify "$full_path_to_canary_txt" ".sig"
verify_cmd_signinfy "$full_path_to_canary_txt" ".sig"

sign_cmd_signify "$full_path_to_canary_txt" ".embed.sig" -e

signify-openbsd -V -e -p "$signify_public_key" -x "$WHONIX_BINARY/canary/canary.txt.embed.sig" -m "$WHONIX_BINARY/canary/canary-unembed.txt"

diff "$full_path_to_canary_txt" "$WHONIX_BINARY/canary/canary-unembed.txt"
